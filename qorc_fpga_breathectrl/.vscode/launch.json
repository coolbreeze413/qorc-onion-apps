{
    "version": "0.2.0",
    "configurations": [
        // Debug - OpenOCD GDB Server - JLink Probe
        {
            "name": "Debug (OpenOCD) JLink",
            "type": "cortex-debug",
            "request": "launch",
            "cwd": "${workspaceFolder}",
            "executable": "GCC_Project/output/bin/${workspaceFolderBasename}.elf",
            "runToEntryPoint": "main",
            "interface": "swd",
            // gdb server
            "servertype": "openocd",
            "serverpath": "${config:qorc_openocd_server_path}",
            "openOCDLaunchCommands": [
                "init",
                "reset halt"
            ],
            "searchDir": [
                "${config:qorc_openocd_scripts_path}"
            ],
            "configFiles": [
                // !!NOTE: remember to change the .openocd file generated for different project!!
                "${workspaceFolder}/fpga/rtl/AL4S3B_FPGA_Top.openocd",
                "interface/jlink_swd.cfg",
                "target/eos_s3.cfg"
            ],
            // gdb
            "armToolchainPath": "${config:qorc_arm_toolchain_path}",
            "armToolchainPrefix": "arm-none-eabi",
            // svd
            "svdFile": "${config:qorc_svd_file_path}",
            // call the load_bitstream proc from gdb to program fpga right after launch sequence is complete
            // just before cortex-debug session is about to start -> postLaunchCommands
            "postLaunchCommands": [
                "monitor load_bitstream"
            ],
            // same thing goes for postRestartCommands, which is when we do a restart in the debug session
            // as we need to load the fpga before restarting the m4 code as well.
            "postRestartCommands": [
                "monitor load_bitstream"
            ],
            // enable this to debug gdb output if any issues
            "showDevDebugOutput": "none"
        },
        // Debug - JLink GDB Server - JLink Probe
        {
            "name": "Debug (JLink)",
            "type": "cortex-debug",
            "request": "launch",
            "cwd": "${workspaceFolder}",
            "executable": "GCC_Project/output/bin/${workspaceFolderBasename}.elf",
            "runToEntryPoint": "main",
            "interface": "swd",
            // gdb server
            "servertype": "jlink",
            "serverpath": "${config:qorc_jlink_server_path}",
            "device": "Cortex-M4",
            // gdb
            "armToolchainPath": "${config:qorc_arm_toolchain_path}",
            "armToolchainPrefix": "arm-none-eabi",
            // svd
            "svdFile": "${config:qorc_svd_file_path}",
            // do we want to run anything before launching debug?
            //"preLaunchTask": "fpga-load (JLink)", // refer to this 'label' in tasks.json
        },
        // Debug - OpenOCD GDB Server - FT2232H Probe
        {
            "name": "Debug (OpenOCD) FT2232H",
            "type": "cortex-debug",
            "request": "launch",
            "cwd": "${workspaceFolder}",
            "executable": "GCC_Project/output/bin/${workspaceFolderBasename}.elf",
            "runToEntryPoint": "main",
            "interface": "swd",
            // gdb server
            "servertype": "openocd",
            "serverpath": "${config:qorc_openocd_server_path}",
            "openOCDLaunchCommands": [
                "init",
                "reset halt"
            ],
            "searchDir": [
                "${config:qorc_openocd_scripts_path}"
            ],
            "configFiles": [
                "ft2232h_swd.cfg",
                "target/eos_s3.cfg"
            ],
            // gdb
            "armToolchainPath": "${config:qorc_arm_toolchain_path}",
            "armToolchainPrefix": "arm-none-eabi",
            // svd
            "svdFile": "${config:qorc_svd_file_path}",
        },
        // Debug - OpenOCD GDB Server - STLink(x) Probe
        {
            "name": "Debug (OpenOCD) STLINK-v2",
            "type": "cortex-debug",
            "request": "launch",
            "cwd": "${workspaceFolder}",
            "executable": "GCC_Project/output/bin/${workspaceFolderBasename}.elf",
            "runToEntryPoint": "main",
            "interface": "swd",
            // gdb server
            "servertype": "openocd",
            "serverpath": "${config:qorc_openocd_server_path}",
            "openOCDLaunchCommands": [
                "init",
                "reset halt"
            ],
            "searchDir": [
                "${config:qorc_openocd_scripts_path}"
            ],
            "configFiles": [
                "interface/stlink-v2-1.cfg",
                "target/eos_s3.cfg"
            ],
            // gdb
            "armToolchainPath": "${config:qorc_arm_toolchain_path}",
            "armToolchainPrefix": "arm-none-eabi",
            // svd
            "svdFile": "${config:qorc_svd_file_path}",
        },
    ]
}