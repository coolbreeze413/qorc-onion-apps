#!/bin/bash

# load the fpga design generated as a jlink command file(.jlink)
# REQ:
# 1. JLink probe is connected to EOS_S3 and it is in DEBUG mode
# 2. JLinkExe is available in the path ('source debugenvsetup.sh') OR the path-to-JLinkExe is passed in as argument.
# 3. (.jlink) has been generated by adding a 'jlink' to the -dump command to ql_symbiflow

# fallback to assuming it is on the path
JLINKEXE="JLinkExe"

# if argument is passed to this script, then it must to path to JLinkExe
# $1 == path to JLinkExe (JLink Commander Executable)
if [ $# == 1 ] ; then
    JLINKEXE="$1"
fi

# the generated .jlink script only focusses on loading the design and setting the IOMUX
#  registers for the design - it does not do anything related to initialization of the EOS_S3
# typically, we need to ensure that the EOS_S3 has been reset before loading the design.

# https://wiki.segger.com/J-Link_Commander

# init the S3 by reset
"$JLINKEXE" -Device Cortex-M4 -If SWD -Speed 4000 -commandFile reset_eoss3.jlink

# load fpga design : note that the JLinkExe will still be running after load, press 'q' to quit
"$JLINKEXE" -Device Cortex-M4 -If SWD -Speed 4000 -commandFile fpga/rtl/*.jlink
