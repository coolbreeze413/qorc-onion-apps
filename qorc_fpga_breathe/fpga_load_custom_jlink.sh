#!/bin/bash

# customize loading the fpga design (.jlink) with BEFORE and AFTER steps as needed.
# REQ:
# 1. JLink probe is connected to EOS_S3 and it is in DEBUG mode
# 2. JLinkExe is available in the path ('source debugenvsetup.sh')
# 3. (.jlink) has been generated by adding a 'jlink' to the -dump command to ql_symbiflow

# fallback to assuming it is on the path
JLINKEXE="JLinkExe"

# if argument is passed to this script, then it must to path to JLinkExe
# $1 == path to JLinkExe (JLink Commander Executable)
if [ $# == 1 ] ; then
    JLINKEXE="$1"
fi

# the generated .jlink script only focusses on loading the design and setting the IOMUX
#  registers for the design - it does not do anything related to initialization of the EOS_S3
# typically, we need to ensure that the EOS_S3 has been reset before loading the design.

# https://wiki.segger.com/J-Link_Commander

# we will customize a new jlink script on the fly and then use it.
# we can add steps BEFORE and AFTER the load-fpga-design script

CUSTOM_JLINK_SCRIPT="custom_eoss3.jlink"
CUSTOM_JLINK_SCRIPT_LOG="custom_eoss3.jlinklog"

# write "NOTHING" into file, i.e. reset the contents, faster than delete + touch.
#https://askubuntu.com/a/549672
: > "$CUSTOM_JLINK_SCRIPT"

# BEFORE
echo "connect" >> "$CUSTOM_JLINK_SCRIPT"
echo "RSetType 3" >> "$CUSTOM_JLINK_SCRIPT"
echo "r" >> "$CUSTOM_JLINK_SCRIPT"
echo "" >> "$CUSTOM_JLINK_SCRIPT"
echo "" >> "$CUSTOM_JLINK_SCRIPT"


# fpga-design
cat fpga/rtl/*.jlink >> "$CUSTOM_JLINK_SCRIPT"


# AFTER
echo "" >> "$CUSTOM_JLINK_SCRIPT"
echo "" >> "$CUSTOM_JLINK_SCRIPT"
echo "mem32 0x40005484 1" >> "$CUSTOM_JLINK_SCRIPT" # because why not...
echo "q" >> "$CUSTOM_JLINK_SCRIPT"


# run the custom script now
"$JLINKEXE" -Device Cortex-M4 -If SWD -Speed 4000 -commandFile "$CUSTOM_JLINK_SCRIPT" -Log "$CUSTOM_JLINK_SCRIPT_LOG"


# remove the custom script/log if needed
#rm "$CUSTOM_JLINK_SCRIPT"
#rm "$CUSTOM_JLINK_SCRIPT_LOG"
